[컴포넌트 라이프사이클 단계]

  1. 마운트(Mount): 컴포넌트가 DOM에 처음 렌더링될 때
  2. 업데이트(Update): state, props가 변경되어 다시 렌더링될 때
  3. 언마운트(Unmount): 컴포넌트가 DOM에서 제거될 때

  import { useEffect } from "react";

  const MyCompnent = () => {
    // 마운트 시 실행 (componentDidMount)
    useEffect(() => {
      console.log("마운트됨");

      // 언마운트 시 실행 (componentWillUnmount)
      return () => {
        console.log("언마운트됨");
      };
    }, []);
    return <div>Hello</div>
  };

  마운트 useEffect( () => {}, [] ) 처음 렌더링(빈 배열)
  업데이트 useEffect( () => {}, [depts] ) 의존성 변경 시(배열의 값이 바뀔때마다)
  언마운트 useEffect( () => { return () => {} }, [] ) 컴포넌트 제거 시

  useEffect()는 렌더링 이후 동작을 처리
  []: 한 번만 실행
  [변수]: 해당 변수 변경될 때만 실행
  return () => {}: 정리 함수(clean-up), 언마운트 시 실행

[react-router-dom]
  설치 - 프로젝트> npm i -> npm i react-router-dom
  : 어플리케이션 내 페이지 간 이동을 관리
  : URL과 특정 컴포넌트와 연결, URL이 변경되면 해당 컴포넌트를 렌더링한다.

  - 컴포넌트와 URL 연결
  - 쿼리 문자열 파라미터 값 가져오기
  - 동적 URL만들기
  - path에 명시한 값 가져오기

  useParams()
  useSearchParams()

  BrowserRouter: 브라우저의 URL을 사용하여 라우팅을 관리한다.
  Route: 경로와 컴포넌트를 매핑한다.
  Link: 페이지 이동을 위한 링크를 제공한다.